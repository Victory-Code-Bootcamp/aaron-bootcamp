Objective: Deepen your understanding of git stash by managing multiple stashes with specific content and messages.
Tasks:
Setup:
Navigate to your daily-challenge folder.
Create master-stash.html with the following HTML structure:
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Advance Stash Challenge</title>
</head>
<body>
    <h1>Initial Content</h1>
</body>
</html>
Create a Feature Branch:
Ensure you are on the main branch, update it, and then create a new branch named feature-stash.
Create Three Distinct Stashes:
First Stash:
Modify the <h1> tag in feature-stash.html to First Change.
Use git stash push -m "First Change Stash" to stash these changes with a message.
Second Stash:
Modify the <h1> tag to Second Change.
Use git stash push -m "Second Change Stash" to stash these changes with a message.
Third Stash:
Modify the <h1> tag to Third Change.
Use git stash push -m "Third Change Stash" to stash these changes with a message.
List and Apply Specific Stashes:
List all stashes using git stash list to view your stashes with their messages.
Apply the second stash using git stash apply stash@{1} (adjust the index based on your list).
Explore stash pop vs. stash apply:
Apply the first stash using git stash apply and observe the result.
Use git stash pop to apply the first stash and note how it is removed from the stash list upon application.
Documentation:
Document the purpose and result of each stash, the commands used, and the differences observed between stash pop and stash apply.
Describe any challenges encountered during the challenge.
Final Steps:
Commit all changes to feature-stash.
Push this branch and create a pull request to merge it into the main branch.
Review and merge the pull request
Submission:
Link your pull request and describe your experience and learning outcomes in this thread.